---
import Icon from 'astro-icon';
import { Picture } from '@astrojs/image/components';

interface Item {
  title: string;
  description?: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  highlight?: string;
  content?: string;
  items?: Array<Item>;
  image?: string | any; // TODO: find HTMLElementProps
  isReversed?: boolean;
  isAfterContent?: boolean;
  isDark?: boolean;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  highlight,
  content = await Astro.slots.render('content'),
  items = [],
  image = await Astro.slots.render('image'),
  isReversed = false,
  isAfterContent = false,
  isDark = false,
} = Astro.props;
---

<section class="relative">
  <div class="absolute inset-0 pointer-events-none -z-[1]" aria-hidden="true">
    <slot name="bg"><div class:list={['absolute inset-0', { 'bg-dark dark:bg-transparent': isDark }]}></div></slot>
  </div>
  <div class:list={[{ 'pt-0 md:pt-0': isAfterContent, dark: isDark }, 'relative text-default py-16 md:py-20']}>
    <div class="max-w-xl sm:mx-auto lg:max-w-2xl">
      {
        (title || subtitle || highlight) && (
          <div class="mb-10 md:mx-auto text-center md:mb-12 max-w-3xl">
            {highlight && (
              <p
                class="text-base text-primary dark:text-blue-200 font-bold tracking-wide uppercase"
                set:html={highlight}
              />
            )}
            {title && (
              <h2
                class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading text-heading"
                set:html={title}
              />
            )}

            {subtitle && <p class="max-w-3xl mx-auto sm:text-center text-xl mt-4 text-muted" set:html={subtitle} />}
          </div>
        )
      }
    </div>
    <div class="mx-auto max-w-screen-xl px-6 md:px-8">
      <div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} md:gap-16`}>
        <div class="md:basis-1/2 self-center">
          {content && <div class="mb-12 text-lg" set:html={content} />}

          {
            items && (
              <div class="space-y-6">
                {items.map(({ title: title2, description, icon }) => (
                  <div class="flex">
                    <div class="flex-shrink-0">
                      <div class="flex h-7 w-7 items-center justify-center rounded-full bg-success text-gray-50">
                        <Icon name={icon ? icon : 'tabler:check'} class="w-5 h-5" />
                      </div>
                    </div>
                    <div class="ml-4">
                      {title2 && <h3 class="text-lg font-bold leading-6 text-heading">{title2}</h3>}
                      {description && <p class="mt-2 text-muted" set:html={description} />}
                    </div>
                  </div>
                ))}
              </div>
            )
          }
        </div>
        <div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2 self-center">
          {
            image && (
              <div class="relative m-auto max-w-4xl">
                {typeof image === 'string' ? (
                  <Fragment set:html={image} />
                ) : (
                  <Picture
                    class="mx-auto w-full rounded-lg"
                    width={500}
                    height={500}
                    widths={[400, 768]}
                    sizes="(max-width: 768px) 100vw, 432px"
                    aspectRatio="500:500"
                    {...image}
                  />
                )}
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>
</section>
