---
import Grid from '~/components/blog/Grid.astro';

import { getBlogPermalink } from '~/utils/permalinks';
import { findPostsByIds } from '~/utils/blog';

export interface Props {
  title?: string;
  allPostsText?: string;
  allPostsLink?: string | URL;
  information?: string;
  postIds: string[];
  isDark?: boolean;
}

const {
  title = await Astro.slots.render('title'),
  allPostsText = 'View all posts',
  allPostsLink = getBlogPermalink(),
  information = await Astro.slots.render('information'),
  postIds = [],
  isDark = false,
} = Astro.props;

const posts = await findPostsByIds(postIds);
---

<section class="relative">
  <div class="absolute inset-0 pointer-events-none -z-[1]" aria-hidden="true">
    <slot name="bg"><div class:list={['absolute inset-0', { 'bg-dark dark:bg-transparent': isDark }]}></div></slot>
  </div>
  <div class:list={['relative text-default px-6 py-16 mx-auto max-w-screen-xl lg:py-20', { dark: isDark }]}>
    <div class="flex flex-col lg:justify-between lg:flex-row mb-8">
      <div class="md:max-w-sm">
        {
          title && (
            <h2
              class="text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none group font-heading text-heading mb-2"
              set:html={title}
            />
          )
        }
        {
          allPostsText && allPostsLink && (
            <a
              class="text-muted hover:text-link hover:underline transition ease-in duration-200 block mb-6 md:mb-0"
              href={allPostsLink}
            >
              {allPostsText} Â»
            </a>
          )
        }
      </div>

      {information && <p class="text-muted lg:text-sm lg:max-w-md" set:html={information} />}
    </div>
  </div>
  <Grid posts={posts} />
</section>
